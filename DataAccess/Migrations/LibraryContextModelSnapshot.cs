// <auto-generated />
using System;
using DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Concrete.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(1565),
                            Name = "Cemal",
                            Status = true,
                            Surname = "Süreya"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(1567),
                            Name = "Orhan",
                            Status = true,
                            Surname = "Kemal"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(1569),
                            Name = "Sabahattin",
                            Status = true,
                            Surname = "Ali"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(1571),
                            Name = "Rick",
                            Status = true,
                            Surname = "Riordan"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(1573),
                            Name = "J.K.",
                            Status = true,
                            Surname = "Rowling"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(1575),
                            Name = "Anonim",
                            Status = true,
                            Surname = "Anonim"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("InStock")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TotalStock")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3266),
                            GenreId = 1,
                            InStock = 5,
                            Name = "Kürk Mantolu Madonna",
                            PublisherId = 1,
                            Section = "113",
                            Status = true,
                            TotalStock = 5
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3270),
                            GenreId = 3,
                            InStock = 2,
                            Name = "Güz Bitiği",
                            PublisherId = 2,
                            Section = "113",
                            Status = true,
                            TotalStock = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3273),
                            GenreId = 3,
                            InStock = 1,
                            Name = "On Üç Günün Mektupları",
                            PublisherId = 1,
                            Section = "113",
                            Status = true,
                            TotalStock = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3275),
                            GenreId = 3,
                            InStock = 1,
                            Name = "Günübirlik",
                            PublisherId = 2,
                            Section = "113",
                            Status = true,
                            TotalStock = 1
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3277),
                            GenreId = 3,
                            InStock = 1,
                            Name = "Üvercinka",
                            PublisherId = 2,
                            Section = "113",
                            Status = true,
                            TotalStock = 1
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3280),
                            GenreId = 1,
                            InStock = 3,
                            Name = "72. Koğuş",
                            PublisherId = 5,
                            Section = "113",
                            Status = true,
                            TotalStock = 3
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3282),
                            GenreId = 1,
                            InStock = 1,
                            Name = "Tersine Dünya",
                            PublisherId = 5,
                            Section = "113",
                            Status = true,
                            TotalStock = 1
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3284),
                            GenreId = 1,
                            InStock = 12,
                            Name = "Percy Jackson",
                            PublisherId = 3,
                            Section = "110",
                            Status = true,
                            TotalStock = 12
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3287),
                            GenreId = 7,
                            InStock = 19,
                            Name = "1919'dan Günümüze Türkiye",
                            PublisherId = 6,
                            Section = "110",
                            Status = true,
                            TotalStock = 19
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3289),
                            GenreId = 1,
                            InStock = 1,
                            Name = "Yüzüklerin Efendisi",
                            PublisherId = 4,
                            Section = "110",
                            Status = true,
                            TotalStock = 1
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(3291),
                            GenreId = 4,
                            InStock = 1,
                            Name = "La Fontaine Masalları",
                            PublisherId = 3,
                            Section = "109",
                            Status = true,
                            TotalStock = 1
                        });
                });

            modelBuilder.Entity("Entities.Concrete.BorrowedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("BorrowedBooks");
                });

            modelBuilder.Entity("Entities.Concrete.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5966),
                            Name = "Roman",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5968),
                            Name = "Hikaye",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5970),
                            Name = "Şiir",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5972),
                            Name = "Fabl",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5973),
                            Name = "Masal",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5975),
                            Name = "Tiyatro",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5977),
                            Name = "Deneme",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(5978),
                            Name = "Ansiklopedi",
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TCKNO")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "İstanbul, Kadıköy",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(7892),
                            Email = "furkanaltinbarin@gmail.com",
                            Name = "Furkan",
                            Phone = "05431768274",
                            Status = true,
                            Surname = "Altınbarın",
                            TCKNO = "20890834938"
                        },
                        new
                        {
                            Id = 2,
                            Address = "İstanbul, Cevizlibağ",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(7896),
                            Email = "mehmetcatmakasli@mail.com",
                            Name = "Mehmet",
                            Phone = "05363235378",
                            Status = true,
                            Surname = "Çatmakaşlı",
                            TCKNO = "55871434614"
                        },
                        new
                        {
                            Id = 3,
                            Address = "İstanbul, Üsküdar",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(7899),
                            Email = "ahmetyilmaz@gmail.com",
                            Name = "Ahmet",
                            Phone = "05363235375",
                            Status = true,
                            Surname = "Yılmaz",
                            TCKNO = "70726402020"
                        },
                        new
                        {
                            Id = 4,
                            Address = "İstanbul, Kartal",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(7901),
                            Email = "ayseyilmaz@gmail.com",
                            Name = "Ayşe",
                            Phone = "05361031245",
                            Status = true,
                            Surname = "Yılmaz",
                            TCKNO = "20697468440"
                        },
                        new
                        {
                            Id = 5,
                            Address = "İstanbul, Avcılar",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(7903),
                            Email = "fatmakartal@gmail.com",
                            Name = "Fatma",
                            Phone = "05361031245",
                            Status = true,
                            Surname = "Kartal",
                            TCKNO = "41354126398"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "İstanbul",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(9418),
                            Email = "everest@mail.com",
                            Name = "Everest",
                            Phone = "02121234567",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Address = "İstanbul",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(9422),
                            Email = "dogan@gmail.com",
                            Name = "Doğan Kitap",
                            Phone = "02121234567",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Address = "İstanbul",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(9424),
                            Email = "isbankasi@mail.com",
                            Name = "İş Bankası",
                            Phone = "02121234567",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            Address = "İstanbul",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(9426),
                            Email = "yapikredi@mail.com",
                            Name = "Yapı Kredi",
                            Phone = "02121234567",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            Address = "İstanbul",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(9428),
                            Email = "timas@mail.com",
                            Name = "Timaş",
                            Phone = "02121234567",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            Address = "Ankara",
                            CreatedDate = new DateTime(2024, 3, 23, 19, 11, 18, 501, DateTimeKind.Local).AddTicks(9430),
                            Email = "tubitak@mail.com",
                            Name = "Tubitak",
                            Phone = "03121234567",
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Book", b =>
                {
                    b.HasOne("Entities.Concrete.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Entities.Concrete.BorrowedBook", b =>
                {
                    b.HasOne("Entities.Concrete.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
